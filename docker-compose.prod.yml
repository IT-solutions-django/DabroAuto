version: '3.8'

services:
  backend:
    build: .
    container_name: car_seller_backend
    command: python manage.py runserver 0.0.0.0:8000
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./media:/usr/src/app/media
      - ./staticfiles:/usr/src/app/staticfiles

  postgres:
    image: postgres:16
    container_name: car_seller_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - .:/usr/src/app
      - .:/docker-entrypoint-initdb.d
    ports:
      - "6543:5432"
    env_file:
      - .env

  redis:
     image: redis
     container_name: car_seller_redis
     command: redis-server /usr/local/etc/redis/redis.conf
     restart: unless-stopped
     volumes:
       - .:/usr/local/etc/redis/redis.conf
     ports:
       - "6379:6379"
     env_file:
       - .env

  celery:
     build: .
     container_name: car_seller_celery
     command: celery -A config worker -Q celery -l info
     restart: unless-stopped
     depends_on:
       - postgres
       - redis
     volumes:
       - .:/usr/src/app
       - ./media:/usr/src/app/media
     links:
       - redis
     env_file:
       - .env

  celery-beat:
     build: .
     container_name: car_seller_celery_beat
     command: celery -A config beat -l info
     restart: unless-stopped
     depends_on:
       - postgres
       - redis
     volumes:
       - .:/usr/src/app
       - ./media:/usr/src/app/media
     links:
       - redis
     env_file:
       - .env

  nginx:
    image: nginx:latest
    container_name: car_seller_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./staticfiles:/staticfiles
      - ./media:/media
    depends_on:
      - backend

volumes:
  postgres_data: